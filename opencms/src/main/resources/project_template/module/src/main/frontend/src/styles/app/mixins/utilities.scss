// sass-lint:disable-all
@mixin media($query) {
  $retina: "screen and (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)";
  $xsmall: "(min-width: 320px)";
  $slim: "(min-width: 520px)";
  $small: "(min-width: 768px)";
  $medium: "(min-width: 1024px)";
  $large: "(min-width: 1200px)";

  $only-xsmall: "(min-width: 320px) and (max-width: 519px)";
  $only-slim: "(min-width: 520px) and (max-width: 767px)";
  $only-small: "(min-width: 768px) and (max-width: 1023px)";
  $only-medium: "(min-width: 1024px) and (max-width: 1199px)";
  $only-desktop: "(min-width: 1024px)";
  $only-mobile: "(min-width: 320px) and (max-width: 1023px)";
  $only-phone: "(min-width: 320px) and (max-width: 767px)";

  @if $query == retina {
    @media #{$retina} {
      @content;
    }
  } @else if $query == xsmall {
    @media #{$xsmall}  {
      @content;
    }
  } @else if $query == slim {
    @media #{$slim}  {
      @content;
    }
  } @else if $query == small {
    @media #{$small}  {
      @content;
    }
  } @else if $query == medium {
    @media #{$medium}  {
      @content;
    }
  } @else if $query == large {
    @media #{$large}  {
      @content;
    }
  } @else if $query == only-xsmall {
    @media #{$only-xsmall}  {
      @content;
    }
  } @else if $query == only-slim {
    @media #{$only-slim}  {
      @content;
    }
  } @else if $query == only-small {
    @media #{$only-small}  {
      @content;
    }
  } @else if $query == only-medium {
    @media #{$only-medium}  {
      @content;
    }
  } @else if $query == only-mobile {
    @media #{$only-mobile}  {
      @content;
    }
  } @else if $query == only-desktop {
    @media #{$only-desktop}  {
      @content;
    }
  } @else if $query == only-phone {
    @media #{$only-phone}  {
      @content;
    }
  }

}

@function remify($value, $base-font-size: 16px) {
  @return $value / $base-font-size + rem;
}

@mixin responsive-visibility($parent) {
  #{$parent} {
    display: block !important;
  }
  table#{$parent}  { display: table; }
  tr#{$parent}     { display: table-row !important; }
  th#{$parent},
  td#{$parent}     { display: table-cell !important; }
}

// [converter] $parent hack
@mixin responsive-invisibility($parent) {
  #{$parent} {
    display: none !important;
  }
}

@mixin textclip($rows, $fontsize, $lineheight) {
  @if map-has-key($rows, 'default') {
      -webkit-line-clamp: map-get($rows, 'default');
      max-height: (map-get($rows, 'default') * $lineheight) / $fontsize + 0em;
  } @else {
    @each $breakpoint, $row in $rows {
      @include media($breakpoint) {
        -webkit-line-clamp: $row;
        max-height: ($row * $lineheight) / $fontsize + 0em;
      }
    }
  }
}

@mixin bp-property($property, $breakpoints) {
  @each $breakpoint, $value in $breakpoints {
    @include media($breakpoint) {
      #{$property}: $value;
    }
  }
}

.textclip {
  -webkit-box-orient: vertical;
  display: block;
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
}

%clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}
// sass-lint:enable-all
